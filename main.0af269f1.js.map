{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","tHead","tH","querySelectorAll","table","addEventListener","e","rows","wasSort","target","classList","contains","clearActive","removeAsc","add","indexH","indexOf","sort","a","b","nameA","children","textContent","nameB","toNum","localeCompare","append","closest","inputForm","createElement","cities","str","Number","replace","forEach","tr","remove","th","addRow","nm","pos","off","age","sal","rowForAdd","innerHTML","toLocaleString","reset","map","el","join","preventDefault","oldMessage","formElements","elements","formName","name","value","formPosition","position","formOffice","office","formAge","formSalary","salary","message","dataset","qa","textM","titleM","emty","trim","length","type","setTimeout","editCell","inputEl","text","tagName","parentElement","focus","onblur","includes"],"mappings":"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","file":"main.0af269f1.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\n\nconst body = document.querySelector('body');\nconst tHead = document.querySelector('thead');\nconst tH = document.querySelectorAll('thead th');\nconst table = document.querySelector('tbody');\n\n// ------------sort rows---------------- //\n\ntHead.addEventListener('click', e => {\n  const rows = [...document.querySelectorAll('tbody tr')];\n  const wasSort = e.target.classList.contains('asc');\n\n  clearActive();\n\n  if (!wasSort) {\n    removeAsc();\n    e.target.classList.add('asc');\n  } else {\n    removeAsc();\n  }\n\n  const indexH = [...tH].indexOf(e.target);\n\n  rows.sort((a, b) => {\n    const nameA = a.children[indexH].textContent;\n    const nameB = b.children[indexH].textContent;\n\n    if (wasSort) {\n      return toNum(nameB) - toNum(nameA) || nameB.localeCompare(nameA);\n    }\n\n    return toNum(nameA) - toNum(nameB) || nameA.localeCompare(nameB);\n  });\n\n  table.append(...rows);\n});\n\n// ------------active row---------------- //\n\ntable.addEventListener('click', e => {\n  clearActive();\n\n  e.target.closest('tr').classList.add('active');\n});\n\n// ------------form---------------- //\nconst inputForm = document.createElement('form');\nconst cities = ['Tokyo', 'Singapore', 'London',\n  'New York', 'Edinburgh', 'San Francisco',\n];\n\ninputForm.classList.add('new-employee-form');\n\ninputForm.innerHTML = `\n<label>Name: \n  <input name='name' type='text' data-qa='name'>\n</label>\n<label>Position: \n  <input name='position' type='text' data-qa='position'>\n</label>\n<label>Office: \n  <select name='office' data-qa='office'>\n    ${cities.map(el => `<option value='${el}'>${el}</option>`).join()}\n  </select>\n</label>\n<label>Age: <input name='age' type='number' data-qa='age'></label>\n<label>Salary: \n  <input name='salary' type='number' data-qa='salary'>\n</label>\n<button type=\"submit\">Save to table</button>\n`;\n\nbody.append(inputForm);\n\ninputForm.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const oldMessage = document.querySelector('div.notification');\n\n  if (oldMessage) {\n    oldMessage.remove();\n  }\n\n  const formElements = inputForm.elements;\n  const formName = formElements.name.value;\n  const formPosition = formElements.position.value;\n  const formOffice = formElements.office.value;\n  const formAge = formElements.age.value;\n  const formSalary = formElements.salary.value;\n  const message = document.createElement('div');\n\n  message.classList.add('notification');\n  message.dataset.qa = 'notification';\n\n  let textM = '';\n  let titleM = '';\n  let emty = 0;\n\n  [...formElements].forEach(el => {\n    if (el.value.trim().length === 0 && el.type !== 'submit') {\n      emty++;\n    }\n  });\n\n  if (emty > 0) {\n    textM += '<p>Fields must not be empty</p>';\n  }\n\n  if (formName.length < 4) {\n    textM += '<p>Name must contain more than 4 letters</p>';\n  }\n\n  if (+formAge < 18 || +formAge > 90) {\n    textM += '<p>Age cannot be less than 18 or more than 90</p>';\n  }\n\n  if (+formSalary <= 0) {\n    textM += '<p>Salary cannot be less than 0</p>';\n  }\n\n  if (textM.length === 0) {\n    titleM += 'Success';\n    textM += '<p>Everything is good</p>';\n    message.classList.add('success');\n    addRow(formName, formPosition, formOffice, formAge, formSalary);\n  } else {\n    titleM += 'Error';\n    message.classList.add('error');\n  }\n\n  message.innerHTML = `\n  <h2>${titleM}</h2>\n  ${textM}`;\n\n  body.append(message);\n\n  setTimeout(() => {\n    message.remove();\n  }, 3000);\n});\n\n// ------------ edit row ---------------- //\n\ntable.addEventListener('dblclick', e => {\n  const editCell = e.target;\n  const text = editCell.textContent;\n\n  if (editCell.tagName !== 'TD') {\n    return;\n  }\n\n  let inputEl;\n\n  editCell.innerHTML = '';\n\n  if (editCell === editCell.parentElement.children[2]) {\n    inputEl = document.createElement('select');\n    inputEl.value = text;\n\n    inputEl.innerHTML = `\n      ${cities.map(el => `<option value='${el}'>${el}</option>`).join()}`;\n  } else {\n    inputEl = document.createElement('input');\n\n    inputEl.classList.add('cell-input');\n    inputEl.value = text;\n  }\n  editCell.append(inputEl);\n  inputEl.focus();\n\n  inputEl.onblur = () => {\n    if (inputEl.value.trim() === '') {\n      editCell.textContent = text;\n    } else {\n      switch (editCell) {\n        case editCell.parentElement.children[2]:\n          if (cities.includes(inputEl.value)) {\n            editCell.textContent = inputEl.value;\n          } else {\n            editCell.textContent = text;\n          }\n          break;\n\n        case editCell.parentElement.children[3]:\n          if (toNum(inputEl.value) >= 18 && toNum(inputEl.value) <= 90) {\n            editCell.textContent = toNum(inputEl.value);\n          } else {\n\n          }\n          break;\n\n        case editCell.parentElement.children[4]:\n\n          if (toNum(inputEl.value)) {\n            editCell.textContent = '$' + toNum(inputEl.value)\n              .toLocaleString('en-US');\n          } else {\n            editCell.textContent = text;\n          }\n          break;\n\n        default:\n          editCell.textContent = inputEl.value.trim();\n          break;\n      }\n    }\n    inputEl.remove();\n  };\n});\n\n// ------------functions---------------- //\n\nfunction toNum(str) {\n  return Number(str.replace(/\\D/g, ''));\n}\n\nfunction clearActive() {\n  document.querySelectorAll('tr').forEach(tr => {\n    tr.classList.remove('active');\n  });\n}\n\nfunction removeAsc() {\n  tH.forEach(th => {\n    th.classList.remove('asc');\n  });\n}\n\nfunction addRow(nm, pos, off, age, sal) {\n  const rowForAdd = document.createElement('tr');\n\n  rowForAdd.innerHTML = `\n  <td>${nm}</td>\n  <td>${pos}</td>\n  <td>${off}</td>\n  <td>${age}</td>\n  <td>${'$' + Number(sal).toLocaleString('en-US')}</td>\n  `;\n\n  table.append(rowForAdd);\n  inputForm.reset();\n}\n"]}